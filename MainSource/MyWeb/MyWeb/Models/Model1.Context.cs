//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWeb.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class thuctapk39Entities : DbContext
    {
        public thuctapk39Entities()
            : base("name=thuctapk39Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AccountConfig> AccountConfigs { get; set; }
        public DbSet<Animal> Animals { get; set; }
        public DbSet<Appointment> Appointments { get; set; }
        public DbSet<BlackListPhone> BlackListPhones { get; set; }
        public DbSet<BoMon> BoMons { get; set; }
        public DbSet<Branch> Branches { get; set; }
        public DbSet<CenterInfomation> CenterInfomations { get; set; }
        public DbSet<ChatQuickReply> ChatQuickReplies { get; set; }
        public DbSet<Class> Classes { get; set; }
        public DbSet<ClassRoom> ClassRooms { get; set; }
        public DbSet<ClassStudentDetail> ClassStudentDetails { get; set; }
        public DbSet<ClassStudentScoreDetail> ClassStudentScoreDetails { get; set; }
        public DbSet<ClassTeacherDetail> ClassTeacherDetails { get; set; }
        public DbSet<ClassTimeTable> ClassTimeTables { get; set; }
        public DbSet<Contact> Contacts { get; set; }
        public DbSet<ContactDuplicateConfig> ContactDuplicateConfigs { get; set; }
        public DbSet<ContactHiddenConfig> ContactHiddenConfigs { get; set; }
        public DbSet<ContactInfoLog> ContactInfoLogs { get; set; }
        public DbSet<ContactInterested> ContactInteresteds { get; set; }
        public DbSet<ContactSource> ContactSources { get; set; }
        public DbSet<ContactStatu> ContactStatus { get; set; }
        public DbSet<ContactStatusLog> ContactStatusLogs { get; set; }
        public DbSet<Course> Courses { get; set; }
        public DbSet<CourseCategory> CourseCategories { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<CustomerNote> CustomerNotes { get; set; }
        public DbSet<CustomerPSID> CustomerPSIDs { get; set; }
        public DbSet<DataChangeNotification> DataChangeNotifications { get; set; }
        public DbSet<DayOff> DayOffs { get; set; }
        public DbSet<Department> Departments { get; set; }
        public DbSet<District> Districts { get; set; }
        public DbSet<EmailTemplate> EmailTemplates { get; set; }
        public DbSet<FBComment> FBComments { get; set; }
        public DbSet<FBCommentPr> FBCommentPrs { get; set; }
        public DbSet<FBPageManageClient> FBPageManageClients { get; set; }
        public DbSet<FBPost> FBPosts { get; set; }
        public DbSet<Gender> Genders { get; set; }
        public DbSet<GiangVien> GiangViens { get; set; }
        public DbSet<GmailAccount> GmailAccounts { get; set; }
        public DbSet<Invoice> Invoices { get; set; }
        public DbSet<InvoiceCategory> InvoiceCategories { get; set; }
        public DbSet<InvoiceStatu> InvoiceStatus { get; set; }
        public DbSet<ListMessage> ListMessages { get; set; }
        public DbSet<ListSearchCol> ListSearchCols { get; set; }
        public DbSet<ListSearchInput> ListSearchInputs { get; set; }
        public DbSet<Notification> Notifications { get; set; }
        public DbSet<PermissionRole> PermissionRoles { get; set; }
        public DbSet<PhoneSeeding> PhoneSeedings { get; set; }
        public DbSet<Province> Provinces { get; set; }
        public DbSet<Relationship> Relationships { get; set; }
        public DbSet<Relative> Relatives { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<ScoreTableStructure> ScoreTableStructures { get; set; }
        public DbSet<ScoreTableStructureClassification> ScoreTableStructureClassifications { get; set; }
        public DbSet<ScoreTableStructureDetail> ScoreTableStructureDetails { get; set; }
        public DbSet<StatusClass> StatusClasses { get; set; }
        public DbSet<StatusClassStudent> StatusClassStudents { get; set; }
        public DbSet<StatusRoom> StatusRooms { get; set; }
        public DbSet<StatusTeacher> StatusTeachers { get; set; }
        public DbSet<StudentAttendance> StudentAttendances { get; set; }
        public DbSet<StudentClassChanging> StudentClassChangings { get; set; }
        public DbSet<StudentExtraInfo> StudentExtraInfoes { get; set; }
        public DbSet<StudentRetain> StudentRetains { get; set; }
        public DbSet<StudentStatu> StudentStatus { get; set; }
        public DbSet<Subject> Subjects { get; set; }
        public DbSet<SubjectCategory> SubjectCategories { get; set; }
        public DbSet<SubjectLessonDetail> SubjectLessonDetails { get; set; }
        public DbSet<SurveyAnswer> SurveyAnswers { get; set; }
        public DbSet<SurveyFor> SurveyFors { get; set; }
        public DbSet<SurveyForm> SurveyForms { get; set; }
        public DbSet<SurveyFormDetail> SurveyFormDetails { get; set; }
        public DbSet<SurveyQuestion> SurveyQuestions { get; set; }
        public DbSet<SurveyStatistic> SurveyStatistics { get; set; }
        public DbSet<SurveyStatisticDetail> SurveyStatisticDetails { get; set; }
        public DbSet<SurveyStatisticImage> SurveyStatisticImages { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<SystemConfig> SystemConfigs { get; set; }
        public DbSet<TagChat> TagChats { get; set; }
        public DbSet<Teacher> Teachers { get; set; }
        public DbSet<TeacherContract> TeacherContracts { get; set; }
        public DbSet<TestChart> TestCharts { get; set; }
        public DbSet<TestSQL> TestSQLs { get; set; }
        public DbSet<UploadedDayOff> UploadedDayOffs { get; set; }
        public DbSet<UserDemo> UserDemoes { get; set; }
        public DbSet<UserListSearchCol> UserListSearchCols { get; set; }
        public DbSet<UserListSearchInput> UserListSearchInputs { get; set; }
        public DbSet<UserNameRelative> UserNameRelatives { get; set; }
        public DbSet<UserNameTest> UserNameTests { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserTest> UserTests { get; set; }
        public DbSet<Ward> Wards { get; set; }
        public DbSet<ContactTestResultStatu> ContactTestResultStatus { get; set; }
        public DbSet<VietTest> VietTests { get; set; }
        public DbSet<ClassStudentDetailView> ClassStudentDetailViews { get; set; }
        public DbSet<ClassStudentView> ClassStudentViews { get; set; }
        public DbSet<ClassTeacherConcatView> ClassTeacherConcatViews { get; set; }
        public DbSet<ClassTeacherView> ClassTeacherViews { get; set; }
        public DbSet<ContactStatusCountByDateAndStaffView> ContactStatusCountByDateAndStaffViews { get; set; }
        public DbSet<ContactStatusCountByDateView> ContactStatusCountByDateViews { get; set; }
        public DbSet<ContactView> ContactViews { get; set; }
        public DbSet<CustomerClassView> CustomerClassViews { get; set; }
        public DbSet<InvoiceView> InvoiceViews { get; set; }
        public DbSet<StudentClassChangingView> StudentClassChangingViews { get; set; }
        public DbSet<StudentRetainView> StudentRetainViews { get; set; }
        public DbSet<StudentView> StudentViews { get; set; }
        public DbSet<UserListSearchInputView> UserListSearchInputViews { get; set; }
        public DbSet<ViewClass> ViewClasses { get; set; }
    
        public virtual int AccountConfigList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccountConfigList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int Add_User(Nullable<int> iD, string userName, string password, string phone)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_User", iDParameter, userNameParameter, passwordParameter, phoneParameter);
        }
    
        public virtual int AnimalSearch(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnimalSearch", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int Branch_Search(string info)
        {
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Branch_Search", infoParameter);
        }
    
        public virtual ObjectResult<CheckDuplicate_Result> CheckDuplicate(Nullable<int> id, string phone1, string phone2)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDuplicate_Result>("CheckDuplicate", idParameter, phone1Parameter, phone2Parameter);
        }
    
        public virtual int Class_Search(string info)
        {
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Class_Search", infoParameter);
        }
    
        public virtual int ClassGetListTeacherAvaiable(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string begintime, string endtime, string begindate, string enddate, string dayofweek, string classID, string isFree)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var begintimeParameter = begintime != null ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(string));
    
            var endtimeParameter = endtime != null ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(string));
    
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var dayofweekParameter = dayofweek != null ?
                new ObjectParameter("dayofweek", dayofweek) :
                new ObjectParameter("dayofweek", typeof(string));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var isFreeParameter = isFree != null ?
                new ObjectParameter("isFree", isFree) :
                new ObjectParameter("isFree", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClassGetListTeacherAvaiable", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, begintimeParameter, endtimeParameter, begindateParameter, enddateParameter, dayofweekParameter, classIDParameter, isFreeParameter);
        }
    
        public virtual int ClassGetListTeacherAvaiable2(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string branchID, string begintime, string endtime, string begindate, string enddate, string dayofweek, string classID, string isFree)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var begintimeParameter = begintime != null ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(string));
    
            var endtimeParameter = endtime != null ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(string));
    
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var dayofweekParameter = dayofweek != null ?
                new ObjectParameter("dayofweek", dayofweek) :
                new ObjectParameter("dayofweek", typeof(string));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var isFreeParameter = isFree != null ?
                new ObjectParameter("isFree", isFree) :
                new ObjectParameter("isFree", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClassGetListTeacherAvaiable2", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, branchIDParameter, begintimeParameter, endtimeParameter, begindateParameter, enddateParameter, dayofweekParameter, classIDParameter, isFreeParameter);
        }
    
        public virtual int ClassSearchStudentOfClass(string mode, string startRow, string lenght, string sortCol, string sortType, string classID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClassSearchStudentOfClass", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, classIDParameter);
        }
    
        public virtual int ClassSearchTeacherAvailable(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClassSearchTeacherAvailable", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int ClassSearchTeacherOfClass(string mode, string startRow, string lenght, string sortCol, string sortType, string classID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClassSearchTeacherOfClass", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, classIDParameter);
        }
    
        public virtual int ContactList(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string isByCreateDate, string createDateBegin, string createDateEnd, string status, string subStatus, string source, string subSource, string assignTo, string subjectInterested, string classInterested, string isByTestDate, string testDateBegin, string testDateEnd, string testTeacher, string testResult, string classRegistered)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var isByCreateDateParameter = isByCreateDate != null ?
                new ObjectParameter("IsByCreateDate", isByCreateDate) :
                new ObjectParameter("IsByCreateDate", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var subStatusParameter = subStatus != null ?
                new ObjectParameter("SubStatus", subStatus) :
                new ObjectParameter("SubStatus", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var subSourceParameter = subSource != null ?
                new ObjectParameter("SubSource", subSource) :
                new ObjectParameter("SubSource", typeof(string));
    
            var assignToParameter = assignTo != null ?
                new ObjectParameter("AssignTo", assignTo) :
                new ObjectParameter("AssignTo", typeof(string));
    
            var subjectInterestedParameter = subjectInterested != null ?
                new ObjectParameter("SubjectInterested", subjectInterested) :
                new ObjectParameter("SubjectInterested", typeof(string));
    
            var classInterestedParameter = classInterested != null ?
                new ObjectParameter("ClassInterested", classInterested) :
                new ObjectParameter("ClassInterested", typeof(string));
    
            var isByTestDateParameter = isByTestDate != null ?
                new ObjectParameter("IsByTestDate", isByTestDate) :
                new ObjectParameter("IsByTestDate", typeof(string));
    
            var testDateBeginParameter = testDateBegin != null ?
                new ObjectParameter("TestDateBegin", testDateBegin) :
                new ObjectParameter("TestDateBegin", typeof(string));
    
            var testDateEndParameter = testDateEnd != null ?
                new ObjectParameter("TestDateEnd", testDateEnd) :
                new ObjectParameter("TestDateEnd", typeof(string));
    
            var testTeacherParameter = testTeacher != null ?
                new ObjectParameter("TestTeacher", testTeacher) :
                new ObjectParameter("TestTeacher", typeof(string));
    
            var testResultParameter = testResult != null ?
                new ObjectParameter("TestResult", testResult) :
                new ObjectParameter("TestResult", typeof(string));
    
            var classRegisteredParameter = classRegistered != null ?
                new ObjectParameter("ClassRegistered", classRegistered) :
                new ObjectParameter("ClassRegistered", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, isByCreateDateParameter, createDateBeginParameter, createDateEndParameter, statusParameter, subStatusParameter, sourceParameter, subSourceParameter, assignToParameter, subjectInterestedParameter, classInterestedParameter, isByTestDateParameter, testDateBeginParameter, testDateEndParameter, testTeacherParameter, testResultParameter, classRegisteredParameter);
        }
    
        public virtual int ContactList2(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string isByCreateDate, string createDateBegin, string createDateEnd, string status, string subStatus, string source, string subSource, string assignTo, string subjectInterested, string classInterested, string isByTestDate, string testDateBegin, string testDateEnd, string testTeacher, string testResult, string classRegistered, string isSearchTrialDate, string trialBeginDate, string trialEndDate, string trialClass)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var isByCreateDateParameter = isByCreateDate != null ?
                new ObjectParameter("IsByCreateDate", isByCreateDate) :
                new ObjectParameter("IsByCreateDate", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var subStatusParameter = subStatus != null ?
                new ObjectParameter("SubStatus", subStatus) :
                new ObjectParameter("SubStatus", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var subSourceParameter = subSource != null ?
                new ObjectParameter("SubSource", subSource) :
                new ObjectParameter("SubSource", typeof(string));
    
            var assignToParameter = assignTo != null ?
                new ObjectParameter("AssignTo", assignTo) :
                new ObjectParameter("AssignTo", typeof(string));
    
            var subjectInterestedParameter = subjectInterested != null ?
                new ObjectParameter("SubjectInterested", subjectInterested) :
                new ObjectParameter("SubjectInterested", typeof(string));
    
            var classInterestedParameter = classInterested != null ?
                new ObjectParameter("ClassInterested", classInterested) :
                new ObjectParameter("ClassInterested", typeof(string));
    
            var isByTestDateParameter = isByTestDate != null ?
                new ObjectParameter("IsByTestDate", isByTestDate) :
                new ObjectParameter("IsByTestDate", typeof(string));
    
            var testDateBeginParameter = testDateBegin != null ?
                new ObjectParameter("TestDateBegin", testDateBegin) :
                new ObjectParameter("TestDateBegin", typeof(string));
    
            var testDateEndParameter = testDateEnd != null ?
                new ObjectParameter("TestDateEnd", testDateEnd) :
                new ObjectParameter("TestDateEnd", typeof(string));
    
            var testTeacherParameter = testTeacher != null ?
                new ObjectParameter("TestTeacher", testTeacher) :
                new ObjectParameter("TestTeacher", typeof(string));
    
            var testResultParameter = testResult != null ?
                new ObjectParameter("TestResult", testResult) :
                new ObjectParameter("TestResult", typeof(string));
    
            var classRegisteredParameter = classRegistered != null ?
                new ObjectParameter("ClassRegistered", classRegistered) :
                new ObjectParameter("ClassRegistered", typeof(string));
    
            var isSearchTrialDateParameter = isSearchTrialDate != null ?
                new ObjectParameter("IsSearchTrialDate", isSearchTrialDate) :
                new ObjectParameter("IsSearchTrialDate", typeof(string));
    
            var trialBeginDateParameter = trialBeginDate != null ?
                new ObjectParameter("TrialBeginDate", trialBeginDate) :
                new ObjectParameter("TrialBeginDate", typeof(string));
    
            var trialEndDateParameter = trialEndDate != null ?
                new ObjectParameter("TrialEndDate", trialEndDate) :
                new ObjectParameter("TrialEndDate", typeof(string));
    
            var trialClassParameter = trialClass != null ?
                new ObjectParameter("TrialClass", trialClass) :
                new ObjectParameter("TrialClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactList2", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, isByCreateDateParameter, createDateBeginParameter, createDateEndParameter, statusParameter, subStatusParameter, sourceParameter, subSourceParameter, assignToParameter, subjectInterestedParameter, classInterestedParameter, isByTestDateParameter, testDateBeginParameter, testDateEndParameter, testTeacherParameter, testResultParameter, classRegisteredParameter, isSearchTrialDateParameter, trialBeginDateParameter, trialEndDateParameter, trialClassParameter);
        }
    
        public virtual int ContactList3(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string isByCreateDate, string createDateBegin, string createDateEnd, string status, string subStatus, string source, string subSource, string assignTo, string subjectInterested, string classInterested, string isByTestDate, string testDateBegin, string testDateEnd, string testTeacher, string testResult, string classRegistered, string isSearchTrialDate, string trialBeginDate, string trialEndDate, string trialClass)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var isByCreateDateParameter = isByCreateDate != null ?
                new ObjectParameter("IsByCreateDate", isByCreateDate) :
                new ObjectParameter("IsByCreateDate", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var subStatusParameter = subStatus != null ?
                new ObjectParameter("SubStatus", subStatus) :
                new ObjectParameter("SubStatus", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var subSourceParameter = subSource != null ?
                new ObjectParameter("SubSource", subSource) :
                new ObjectParameter("SubSource", typeof(string));
    
            var assignToParameter = assignTo != null ?
                new ObjectParameter("AssignTo", assignTo) :
                new ObjectParameter("AssignTo", typeof(string));
    
            var subjectInterestedParameter = subjectInterested != null ?
                new ObjectParameter("SubjectInterested", subjectInterested) :
                new ObjectParameter("SubjectInterested", typeof(string));
    
            var classInterestedParameter = classInterested != null ?
                new ObjectParameter("ClassInterested", classInterested) :
                new ObjectParameter("ClassInterested", typeof(string));
    
            var isByTestDateParameter = isByTestDate != null ?
                new ObjectParameter("IsByTestDate", isByTestDate) :
                new ObjectParameter("IsByTestDate", typeof(string));
    
            var testDateBeginParameter = testDateBegin != null ?
                new ObjectParameter("TestDateBegin", testDateBegin) :
                new ObjectParameter("TestDateBegin", typeof(string));
    
            var testDateEndParameter = testDateEnd != null ?
                new ObjectParameter("TestDateEnd", testDateEnd) :
                new ObjectParameter("TestDateEnd", typeof(string));
    
            var testTeacherParameter = testTeacher != null ?
                new ObjectParameter("TestTeacher", testTeacher) :
                new ObjectParameter("TestTeacher", typeof(string));
    
            var testResultParameter = testResult != null ?
                new ObjectParameter("TestResult", testResult) :
                new ObjectParameter("TestResult", typeof(string));
    
            var classRegisteredParameter = classRegistered != null ?
                new ObjectParameter("ClassRegistered", classRegistered) :
                new ObjectParameter("ClassRegistered", typeof(string));
    
            var isSearchTrialDateParameter = isSearchTrialDate != null ?
                new ObjectParameter("IsSearchTrialDate", isSearchTrialDate) :
                new ObjectParameter("IsSearchTrialDate", typeof(string));
    
            var trialBeginDateParameter = trialBeginDate != null ?
                new ObjectParameter("TrialBeginDate", trialBeginDate) :
                new ObjectParameter("TrialBeginDate", typeof(string));
    
            var trialEndDateParameter = trialEndDate != null ?
                new ObjectParameter("TrialEndDate", trialEndDate) :
                new ObjectParameter("TrialEndDate", typeof(string));
    
            var trialClassParameter = trialClass != null ?
                new ObjectParameter("TrialClass", trialClass) :
                new ObjectParameter("TrialClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactList3", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, isByCreateDateParameter, createDateBeginParameter, createDateEndParameter, statusParameter, subStatusParameter, sourceParameter, subSourceParameter, assignToParameter, subjectInterestedParameter, classInterestedParameter, isByTestDateParameter, testDateBeginParameter, testDateEndParameter, testTeacherParameter, testResultParameter, classRegisteredParameter, isSearchTrialDateParameter, trialBeginDateParameter, trialEndDateParameter, trialClassParameter);
        }
    
        public virtual int ContactPickerList(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string classRegistered)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var classRegisteredParameter = classRegistered != null ?
                new ObjectParameter("ClassRegistered", classRegistered) :
                new ObjectParameter("ClassRegistered", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactPickerList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, classRegisteredParameter);
        }
    
        public virtual int ContactSourceList(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string parentID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var parentIDParameter = parentID != null ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactSourceList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, parentIDParameter);
        }
    
        public virtual int CourseCategoryList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CourseCategoryList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int CourseList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CourseList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int Customer_Search(string info)
        {
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Customer_Search", infoParameter);
        }
    
        public virtual ObjectResult<DashboardContactSource_Result> DashboardContactSource(Nullable<System.DateTime> begindate, Nullable<System.DateTime> enddate, Nullable<int> branchID)
        {
            var begindateParameter = begindate.HasValue ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardContactSource_Result>("DashboardContactSource", begindateParameter, enddateParameter, branchIDParameter);
        }
    
        public virtual int DashboardContactSource2(string begindate, string enddate, string branchID)
        {
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DashboardContactSource2", begindateParameter, enddateParameter, branchIDParameter);
        }
    
        public virtual ObjectResult<DashboardContactStatus_Result> DashboardContactStatus(Nullable<System.DateTime> begindate, Nullable<System.DateTime> enddate, Nullable<int> branchID)
        {
            var begindateParameter = begindate.HasValue ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardContactStatus_Result>("DashboardContactStatus", begindateParameter, enddateParameter, branchIDParameter);
        }
    
        public virtual int DashboardContactStatus2(string begindate, string enddate, string branchID)
        {
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DashboardContactStatus2", begindateParameter, enddateParameter, branchIDParameter);
        }
    
        public virtual ObjectResult<DashboardRevenueByDay_Result> DashboardRevenueByDay(string beginDate, string endDate)
        {
            var beginDateParameter = beginDate != null ?
                new ObjectParameter("beginDate", beginDate) :
                new ObjectParameter("beginDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardRevenueByDay_Result>("DashboardRevenueByDay", beginDateParameter, endDateParameter);
        }
    
        public virtual int DashboardRevenueOfBranchByDay(string begindate, string endate)
        {
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("endate", endate) :
                new ObjectParameter("endate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DashboardRevenueOfBranchByDay", begindateParameter, endateParameter);
        }
    
        public virtual ObjectResult<DashboardTotalInfo_Result> DashboardTotalInfo(Nullable<System.DateTime> begindate, Nullable<System.DateTime> enddate, Nullable<int> branchID)
        {
            var begindateParameter = begindate.HasValue ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardTotalInfo_Result>("DashboardTotalInfo", begindateParameter, enddateParameter, branchIDParameter);
        }
    
        public virtual int DashboardTotalInfo2(string begindate, string enddate, string branchID)
        {
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DashboardTotalInfo2", begindateParameter, enddateParameter, branchIDParameter);
        }
    
        public virtual int ELSync()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELSync");
        }
    
        public virtual int ExecContact(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExecContact", idParameter);
        }
    
        public virtual ObjectResult<FBGetLastestComment_Result> FBGetLastestComment(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FBGetLastestComment_Result>("FBGetLastestComment", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FBGetUnreadCount(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FBGetUnreadCount", idParameter);
        }
    
        public virtual ObjectResult<GetAllCommentByID_Result> GetAllCommentByID(string iD, string type)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCommentByID_Result>("GetAllCommentByID", iDParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetAllCommentByID2_Result> GetAllCommentByID2(string iD, string type)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCommentByID2_Result>("GetAllCommentByID2", iDParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetAllInboxByID_Result> GetAllInboxByID(string childOf)
        {
            var childOfParameter = childOf != null ?
                new ObjectParameter("ChildOf", childOf) :
                new ObjectParameter("ChildOf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllInboxByID_Result>("GetAllInboxByID", childOfParameter);
        }
    
        public virtual ObjectResult<GetClassOfTeacherForTimeTable_Result> GetClassOfTeacherForTimeTable(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClassOfTeacherForTimeTable_Result>("GetClassOfTeacherForTimeTable", idParameter);
        }
    
        public virtual ObjectResult<GetClassTimeTable_Result> GetClassTimeTable(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClassTimeTable_Result>("GetClassTimeTable", idParameter);
        }
    
        public virtual ObjectResult<GetContactHistory_Result> GetContactHistory(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactHistory_Result>("GetContactHistory", idParameter);
        }
    
        public virtual ObjectResult<GetContactRelative_Result> GetContactRelative(string contactID)
        {
            var contactIDParameter = contactID != null ?
                new ObjectParameter("contactID", contactID) :
                new ObjectParameter("contactID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactRelative_Result>("GetContactRelative", contactIDParameter);
        }
    
        public virtual ObjectResult<GetDataChanged_Result> GetDataChanged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataChanged_Result>("GetDataChanged");
        }
    
        public virtual ObjectResult<Nullable<int>> GetDuplicateOrderID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetDuplicateOrderID", idParameter);
        }
    
        public virtual int GetListFBComment(string pageSelect, string typemessage, string haveread, string havephone, string havereply, string begindate, string enddate, string post, string search, string tag, Nullable<int> pagging, string userid)
        {
            var pageSelectParameter = pageSelect != null ?
                new ObjectParameter("pageSelect", pageSelect) :
                new ObjectParameter("pageSelect", typeof(string));
    
            var typemessageParameter = typemessage != null ?
                new ObjectParameter("typemessage", typemessage) :
                new ObjectParameter("typemessage", typeof(string));
    
            var havereadParameter = haveread != null ?
                new ObjectParameter("haveread", haveread) :
                new ObjectParameter("haveread", typeof(string));
    
            var havephoneParameter = havephone != null ?
                new ObjectParameter("havephone", havephone) :
                new ObjectParameter("havephone", typeof(string));
    
            var havereplyParameter = havereply != null ?
                new ObjectParameter("havereply", havereply) :
                new ObjectParameter("havereply", typeof(string));
    
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var postParameter = post != null ?
                new ObjectParameter("post", post) :
                new ObjectParameter("post", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            var paggingParameter = pagging.HasValue ?
                new ObjectParameter("pagging", pagging) :
                new ObjectParameter("pagging", typeof(int));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetListFBComment", pageSelectParameter, typemessageParameter, havereadParameter, havephoneParameter, havereplyParameter, begindateParameter, enddateParameter, postParameter, searchParameter, tagParameter, paggingParameter, useridParameter);
        }
    
        public virtual ObjectResult<GetListRelative_Result> GetListRelative(string cusID)
        {
            var cusIDParameter = cusID != null ?
                new ObjectParameter("CusID", cusID) :
                new ObjectParameter("CusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListRelative_Result>("GetListRelative", cusIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetListSurvey(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetListSurvey", iDParameter);
        }
    
        public virtual ObjectResult<GetListUserNameTest_Result> GetListUserNameTest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListUserNameTest_Result>("GetListUserNameTest");
        }
    
        public virtual ObjectResult<GetListUserTest_Result> GetListUserTest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListUserTest_Result>("GetListUserTest");
        }
    
        public virtual ObjectResult<GetStudentAttendance_Result> GetStudentAttendance(string classID, Nullable<System.DateTime> date)
        {
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentAttendance_Result>("GetStudentAttendance", classIDParameter, dateParameter);
        }
    
        public virtual int GetSurvey(Nullable<int> mode)
        {
            var modeParameter = mode.HasValue ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSurvey", modeParameter);
        }
    
        public virtual ObjectResult<string> GetTeacherNameByContactID(Nullable<int> contactid)
        {
            var contactidParameter = contactid.HasValue ?
                new ObjectParameter("contactid", contactid) :
                new ObjectParameter("contactid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTeacherNameByContactID", contactidParameter);
        }
    
        public virtual int InvoiceByChangingID(string mode, string startRow, string lenght, string sortCol, string sortType, string iD)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoiceByChangingID", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, iDParameter);
        }
    
        public virtual int InvoiceByContactID(string mode, string startRow, string lenght, string sortCol, string sortType, string iD)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoiceByContactID", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, iDParameter);
        }
    
        public virtual int InvoiceList(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string beginDate, string endDate, string statusID, string invoiceTypeID, string categoryID, string branchID, string accountID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var beginDateParameter = beginDate != null ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            var invoiceTypeIDParameter = invoiceTypeID != null ?
                new ObjectParameter("InvoiceTypeID", invoiceTypeID) :
                new ObjectParameter("InvoiceTypeID", typeof(string));
    
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoiceList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, beginDateParameter, endDateParameter, statusIDParameter, invoiceTypeIDParameter, categoryIDParameter, branchIDParameter, accountIDParameter);
        }
    
        public virtual int InvoieByDay(string begindate, string endate, string account)
        {
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("endate", endate) :
                new ObjectParameter("endate", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("account", account) :
                new ObjectParameter("account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoieByDay", begindateParameter, endateParameter, accountParameter);
        }
    
        public virtual int InvoieByTimeStatistic(string begindate, string endate, string account)
        {
            var begindateParameter = begindate != null ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(string));
    
            var endateParameter = endate != null ?
                new ObjectParameter("endate", endate) :
                new ObjectParameter("endate", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("account", account) :
                new ObjectParameter("account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoieByTimeStatistic", begindateParameter, endateParameter, accountParameter);
        }
    
        public virtual int ListSurveyQuestion(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string iD)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListSurveyQuestion", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, iDParameter);
        }
    
        public virtual int LstAppointment(string mode, string startRow, string lenght, string sortCol, string sortType, string objID, string objType)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var objIDParameter = objID != null ?
                new ObjectParameter("ObjID", objID) :
                new ObjectParameter("ObjID", typeof(string));
    
            var objTypeParameter = objType != null ?
                new ObjectParameter("ObjType", objType) :
                new ObjectParameter("ObjType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LstAppointment", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, objIDParameter, objTypeParameter);
        }
    
        public virtual int report_employees_Sales(string mode, string startdate, string enddate)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("report_employees_Sales", modeParameter, startdateParameter, enddateParameter);
        }
    
        public virtual int report_employees_Sales1(string mode, string startdate, string enddate)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("report_employees_Sales1", modeParameter, startdateParameter, enddateParameter);
        }
    
        public virtual int report_Invoice_ByDate(string startdate, string enddate, string type)
        {
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("report_Invoice_ByDate", startdateParameter, enddateParameter, typeParameter);
        }
    
        public virtual int report_Invoice_ByDate_Account(string startdate, string enddate, string type)
        {
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("report_Invoice_ByDate_Account", startdateParameter, enddateParameter, typeParameter);
        }
    
        public virtual int report_Invoice_ByDate_Pay(string startdate, string enddate, string type)
        {
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("report_Invoice_ByDate_Pay", startdateParameter, enddateParameter, typeParameter);
        }
    
        public virtual int report_Invoice_ByDate_Type(string startdate, string enddate, string type)
        {
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("report_Invoice_ByDate_Type", startdateParameter, enddateParameter, typeParameter);
        }
    
        public virtual int ReportContactSourceByDate(string mode, string startRow, string lenght, string sortCol, string sortType, string createDateBegin, string createDateEnd, string cols, string sumCols, string sumContactCols)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var colsParameter = cols != null ?
                new ObjectParameter("Cols", cols) :
                new ObjectParameter("Cols", typeof(string));
    
            var sumColsParameter = sumCols != null ?
                new ObjectParameter("SumCols", sumCols) :
                new ObjectParameter("SumCols", typeof(string));
    
            var sumContactColsParameter = sumContactCols != null ?
                new ObjectParameter("SumContactCols", sumContactCols) :
                new ObjectParameter("SumContactCols", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportContactSourceByDate", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, createDateBeginParameter, createDateEndParameter, colsParameter, sumColsParameter, sumContactColsParameter);
        }
    
        public virtual int ReportContactStatusByDate(string mode, string startRow, string lenght, string sortCol, string sortType, string createDateBegin, string createDateEnd, string cols, string sumCols, string sumContactCols)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var colsParameter = cols != null ?
                new ObjectParameter("Cols", cols) :
                new ObjectParameter("Cols", typeof(string));
    
            var sumColsParameter = sumCols != null ?
                new ObjectParameter("SumCols", sumCols) :
                new ObjectParameter("SumCols", typeof(string));
    
            var sumContactColsParameter = sumContactCols != null ?
                new ObjectParameter("SumContactCols", sumContactCols) :
                new ObjectParameter("SumContactCols", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportContactStatusByDate", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, createDateBeginParameter, createDateEndParameter, colsParameter, sumColsParameter, sumContactColsParameter);
        }
    
        public virtual int ReportContactStatusByDateAndStaff(string mode, string startRow, string lenght, string sortCol, string sortType, string createDateBegin, string createDateEnd, string cols, string sumCols, string sumContactCols)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var colsParameter = cols != null ?
                new ObjectParameter("Cols", cols) :
                new ObjectParameter("Cols", typeof(string));
    
            var sumColsParameter = sumCols != null ?
                new ObjectParameter("SumCols", sumCols) :
                new ObjectParameter("SumCols", typeof(string));
    
            var sumContactColsParameter = sumContactCols != null ?
                new ObjectParameter("SumContactCols", sumContactCols) :
                new ObjectParameter("SumContactCols", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportContactStatusByDateAndStaff", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, createDateBeginParameter, createDateEndParameter, colsParameter, sumColsParameter, sumContactColsParameter);
        }
    
        public virtual int ReportContactStatusByDateAndStaff1(string mode, string startRow, string lenght, string sortCol, string sortType, string createDateBegin, string createDateEnd, string cols, string sumCols, string sumContactCols)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var colsParameter = cols != null ?
                new ObjectParameter("Cols", cols) :
                new ObjectParameter("Cols", typeof(string));
    
            var sumColsParameter = sumCols != null ?
                new ObjectParameter("SumCols", sumCols) :
                new ObjectParameter("SumCols", typeof(string));
    
            var sumContactColsParameter = sumContactCols != null ?
                new ObjectParameter("SumContactCols", sumContactCols) :
                new ObjectParameter("SumContactCols", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportContactStatusByDateAndStaff1", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, createDateBeginParameter, createDateEndParameter, colsParameter, sumColsParameter, sumContactColsParameter);
        }
    
        public virtual int ReportSurveyStatic(string mode, string isByCreateDate, string createDateBegin, string createDateEnd, string iDSurveyForm, string iDClass, string iDQuestion, string iDBranch, string iDTeacher, string iDSubject)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var isByCreateDateParameter = isByCreateDate != null ?
                new ObjectParameter("IsByCreateDate", isByCreateDate) :
                new ObjectParameter("IsByCreateDate", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var iDSurveyFormParameter = iDSurveyForm != null ?
                new ObjectParameter("IDSurveyForm", iDSurveyForm) :
                new ObjectParameter("IDSurveyForm", typeof(string));
    
            var iDClassParameter = iDClass != null ?
                new ObjectParameter("IDClass", iDClass) :
                new ObjectParameter("IDClass", typeof(string));
    
            var iDQuestionParameter = iDQuestion != null ?
                new ObjectParameter("IDQuestion", iDQuestion) :
                new ObjectParameter("IDQuestion", typeof(string));
    
            var iDBranchParameter = iDBranch != null ?
                new ObjectParameter("IDBranch", iDBranch) :
                new ObjectParameter("IDBranch", typeof(string));
    
            var iDTeacherParameter = iDTeacher != null ?
                new ObjectParameter("IDTeacher", iDTeacher) :
                new ObjectParameter("IDTeacher", typeof(string));
    
            var iDSubjectParameter = iDSubject != null ?
                new ObjectParameter("IDSubject", iDSubject) :
                new ObjectParameter("IDSubject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSurveyStatic", modeParameter, isByCreateDateParameter, createDateBeginParameter, createDateEndParameter, iDSurveyFormParameter, iDClassParameter, iDQuestionParameter, iDBranchParameter, iDTeacherParameter, iDSubjectParameter);
        }
    
        public virtual int RPT_PrintInvoice(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RPT_PrintInvoice", idParameter);
        }
    
        public virtual ObjectResult<RPT_PrintRetain_Result> RPT_PrintRetain(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_PrintRetain_Result>("RPT_PrintRetain", idParameter);
        }
    
        public virtual int RptContactPrint(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptContactPrint", idParameter);
        }
    
        public virtual int Search_Name(string name, string phone1)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Search_Name", nameParameter, phone1Parameter);
        }
    
        public virtual int SearchBlackListPhone(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchBlackListPhone", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchBranch(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchBranch", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchCenterInfomation(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchCenterInfomation", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchChildOfScoreTableStructureDetail(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string iD)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchChildOfScoreTableStructureDetail", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, iDParameter);
        }
    
        public virtual int SearchClass(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string status, string branch, string subject)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchClass", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, statusParameter, branchParameter, subjectParameter);
        }
    
        public virtual int SearchClassByContact(string mode, string startRow, string lenght, string sortCol, string sortType, string iD)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchClassByContact", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, iDParameter);
        }
    
        public virtual int SearchClassByCustomer(string mode, string startRow, string lenght, string sortCol, string sortType, string iD)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchClassByCustomer", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, iDParameter);
        }
    
        public virtual int SearchClassRoom(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string branch)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchClassRoom", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, branchParameter);
        }
    
        public virtual int SearchClassRoom1(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string branch, string beginTime, string endTime, string beginDate, string endDate, string searchDayOfWeek)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var beginTimeParameter = beginTime != null ?
                new ObjectParameter("BeginTime", beginTime) :
                new ObjectParameter("BeginTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            var beginDateParameter = beginDate != null ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var searchDayOfWeekParameter = searchDayOfWeek != null ?
                new ObjectParameter("SearchDayOfWeek", searchDayOfWeek) :
                new ObjectParameter("SearchDayOfWeek", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchClassRoom1", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, branchParameter, beginTimeParameter, endTimeParameter, beginDateParameter, endDateParameter, searchDayOfWeekParameter);
        }
    
        public virtual int SearchContacList(string info)
        {
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchContacList", infoParameter);
        }
    
        public virtual int SearchEmailTemplate(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchEmailTemplate", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchFBPost(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchFBPost", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchInvoiceCategory(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string type)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchInvoiceCategory", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, typeParameter);
        }
    
        public virtual int SearchPhoneSeeding(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchPhoneSeeding", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchRole(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchRole", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchScoreTableStructure(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchScoreTableStructure", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchScoreTableStructureDetail(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string iD, string childOf)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var childOfParameter = childOf != null ?
                new ObjectParameter("ChildOf", childOf) :
                new ObjectParameter("ChildOf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchScoreTableStructureDetail", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, iDParameter, childOfParameter);
        }
    
        public virtual int SearchStatusClass(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchStatusClass", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchStatusRoom(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchStatusRoom", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchStatustList(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string parentID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var parentIDParameter = parentID != null ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchStatustList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, parentIDParameter);
        }
    
        public virtual int SearchStudentScoreDetail(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string classID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchStudentScoreDetail", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, classIDParameter);
        }
    
        public virtual int SearchStudentScoreDetail2(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string classID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchStudentScoreDetail2", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, classIDParameter);
        }
    
        public virtual int SearchSurveryForm(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchSurveryForm", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchSurveryStatic(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchSurveryStatic", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchTeacher(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchTeacher", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchTeacher2(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string branch, string beginTime, string endTime, string beginDate, string endDate, string searchDayOfWeek)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var beginTimeParameter = beginTime != null ?
                new ObjectParameter("BeginTime", beginTime) :
                new ObjectParameter("BeginTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            var beginDateParameter = beginDate != null ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var searchDayOfWeekParameter = searchDayOfWeek != null ?
                new ObjectParameter("SearchDayOfWeek", searchDayOfWeek) :
                new ObjectParameter("SearchDayOfWeek", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchTeacher2", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, branchParameter, beginTimeParameter, endTimeParameter, beginDateParameter, endDateParameter, searchDayOfWeekParameter);
        }
    
        public virtual int SearchThucTapVinh(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchThucTapVinh", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchUser(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchUser", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SearchUserNameTest(string mode, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchUserNameTest", modeParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SelectAll_User()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectAll_User");
        }
    
        public virtual ObjectResult<SelectAllFee_Result> SelectAllFee(Nullable<decimal> fee)
        {
            var feeParameter = fee.HasValue ?
                new ObjectParameter("Fee", fee) :
                new ObjectParameter("Fee", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllFee_Result>("SelectAllFee", feeParameter);
        }
    
        public virtual ObjectResult<SelectAllName_Result> SelectAllName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllName_Result>("SelectAllName", nameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_loaddata_User(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loaddata_User", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int sp_paging_search_User(Nullable<int> totalrows, Nullable<int> totalrowsafterfiltering, Nullable<int> number, Nullable<int> size, string search, string columnName, string sortDirection)
        {
            var totalrowsParameter = totalrows.HasValue ?
                new ObjectParameter("Totalrows", totalrows) :
                new ObjectParameter("Totalrows", typeof(int));
    
            var totalrowsafterfilteringParameter = totalrowsafterfiltering.HasValue ?
                new ObjectParameter("Totalrowsafterfiltering", totalrowsafterfiltering) :
                new ObjectParameter("Totalrowsafterfiltering", typeof(int));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_paging_search_User", totalrowsParameter, totalrowsafterfilteringParameter, numberParameter, sizeParameter, searchParameter, columnNameParameter, sortDirectionParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int StatusList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StatusList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int StudentClassChangingSearch(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string @class)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentClassChangingSearch", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, classParameter);
        }
    
        public virtual int StudentList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int StudentRetainSearch(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string @class)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentRetainSearch", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, classParameter);
        }
    
        public virtual int StudentSearch(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string registeredClass, string feeStatus, string branchID, string classStatusID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var registeredClassParameter = registeredClass != null ?
                new ObjectParameter("RegisteredClass", registeredClass) :
                new ObjectParameter("RegisteredClass", typeof(string));
    
            var feeStatusParameter = feeStatus != null ?
                new ObjectParameter("FeeStatus", feeStatus) :
                new ObjectParameter("FeeStatus", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var classStatusIDParameter = classStatusID != null ?
                new ObjectParameter("ClassStatusID", classStatusID) :
                new ObjectParameter("ClassStatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentSearch", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, registeredClassParameter, feeStatusParameter, branchIDParameter, classStatusIDParameter);
        }
    
        public virtual int StudentSearch2(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string registeredClass, string feeStatus, string branchID, string classStatusID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var registeredClassParameter = registeredClass != null ?
                new ObjectParameter("RegisteredClass", registeredClass) :
                new ObjectParameter("RegisteredClass", typeof(string));
    
            var feeStatusParameter = feeStatus != null ?
                new ObjectParameter("FeeStatus", feeStatus) :
                new ObjectParameter("FeeStatus", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var classStatusIDParameter = classStatusID != null ?
                new ObjectParameter("ClassStatusID", classStatusID) :
                new ObjectParameter("ClassStatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentSearch2", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, registeredClassParameter, feeStatusParameter, branchIDParameter, classStatusIDParameter);
        }
    
        public virtual int SubjectCategoryList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubjectCategoryList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SubjectList(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string parentID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var parentIDParameter = parentID != null ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubjectList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, parentIDParameter);
        }
    
        public virtual int SubjectListTest(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubjectListTest", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SurveryStaticSearchList(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string @class)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SurveryStaticSearchList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, classParameter);
        }
    
        public virtual int SurveyAnswerGetListReport(string mode, string isByCreateDate, string createDateBegin, string createDateEnd, string iDSurveyForm, string iDClass, string iDBranch, string iDSubject, string iDTeacher, string iDAnswer)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var isByCreateDateParameter = isByCreateDate != null ?
                new ObjectParameter("IsByCreateDate", isByCreateDate) :
                new ObjectParameter("IsByCreateDate", typeof(string));
    
            var createDateBeginParameter = createDateBegin != null ?
                new ObjectParameter("CreateDateBegin", createDateBegin) :
                new ObjectParameter("CreateDateBegin", typeof(string));
    
            var createDateEndParameter = createDateEnd != null ?
                new ObjectParameter("CreateDateEnd", createDateEnd) :
                new ObjectParameter("CreateDateEnd", typeof(string));
    
            var iDSurveyFormParameter = iDSurveyForm != null ?
                new ObjectParameter("IDSurveyForm", iDSurveyForm) :
                new ObjectParameter("IDSurveyForm", typeof(string));
    
            var iDClassParameter = iDClass != null ?
                new ObjectParameter("IDClass", iDClass) :
                new ObjectParameter("IDClass", typeof(string));
    
            var iDBranchParameter = iDBranch != null ?
                new ObjectParameter("IDBranch", iDBranch) :
                new ObjectParameter("IDBranch", typeof(string));
    
            var iDSubjectParameter = iDSubject != null ?
                new ObjectParameter("IDSubject", iDSubject) :
                new ObjectParameter("IDSubject", typeof(string));
    
            var iDTeacherParameter = iDTeacher != null ?
                new ObjectParameter("IDTeacher", iDTeacher) :
                new ObjectParameter("IDTeacher", typeof(string));
    
            var iDAnswerParameter = iDAnswer != null ?
                new ObjectParameter("IDAnswer", iDAnswer) :
                new ObjectParameter("IDAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SurveyAnswerGetListReport", modeParameter, isByCreateDateParameter, createDateBeginParameter, createDateEndParameter, iDSurveyFormParameter, iDClassParameter, iDBranchParameter, iDSubjectParameter, iDTeacherParameter, iDAnswerParameter);
        }
    
        public virtual int SurveyForList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SurveyForList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int SurveyListResult(string mode, string startRow, string lenght, string sortCol, string sortType, string startdate, string enddate)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SurveyListResult", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, startdateParameter, enddateParameter);
        }
    
        public virtual int TagChatList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TagChatList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual ObjectResult<Teacher_Schedule_Result> Teacher_Schedule(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Teacher_Schedule_Result>("Teacher_Schedule", idParameter);
        }
    
        public virtual int Teacher_Search(string info, string branchID)
        {
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Teacher_Search", infoParameter, branchIDParameter);
        }
    
        public virtual int TeacherContractList(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TeacherContractList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual ObjectResult<TimekeepingGetListDate_Result> TimekeepingGetListDate(string begin, string end)
        {
            var beginParameter = begin != null ?
                new ObjectParameter("begin", begin) :
                new ObjectParameter("begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimekeepingGetListDate_Result>("TimekeepingGetListDate", beginParameter, endParameter);
        }
    
        public virtual int TimekeepingTeacherDataForTeacher(string mode, string startRow, string lenght, string sortCol, string sortType, string beginDate, string endDatee, string teacherID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var beginDateParameter = beginDate != null ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(string));
    
            var endDateeParameter = endDatee != null ?
                new ObjectParameter("EndDatee", endDatee) :
                new ObjectParameter("EndDatee", typeof(string));
    
            var teacherIDParameter = teacherID != null ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TimekeepingTeacherDataForTeacher", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, beginDateParameter, endDateeParameter, teacherIDParameter);
        }
    
        public virtual int TimekeepingTeacherGetList(string mode, string startRow, string lenght, string sortCol, string sortType, string beginDate, string endDatee, string teacherID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var beginDateParameter = beginDate != null ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(string));
    
            var endDateeParameter = endDatee != null ?
                new ObjectParameter("EndDatee", endDatee) :
                new ObjectParameter("EndDatee", typeof(string));
    
            var teacherIDParameter = teacherID != null ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TimekeepingTeacherGetList", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, beginDateParameter, endDateeParameter, teacherIDParameter);
        }
    
        public virtual int UserRelativeSearch(string mode, string startRow, string lenght, string sortCol, string sortType, string info, string parentID)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var parentIDParameter = parentID != null ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserRelativeSearch", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter, parentIDParameter);
        }
    
        public virtual int UserSearch1(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSearch1", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    
        public virtual int usp_SearchDayOff(string mode, string startRow, string lenght, string sortCol, string sortType, string info)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var startRowParameter = startRow != null ?
                new ObjectParameter("StartRow", startRow) :
                new ObjectParameter("StartRow", typeof(string));
    
            var lenghtParameter = lenght != null ?
                new ObjectParameter("Lenght", lenght) :
                new ObjectParameter("Lenght", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SearchDayOff", modeParameter, startRowParameter, lenghtParameter, sortColParameter, sortTypeParameter, infoParameter);
        }
    }
}
